// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User entity
model User {
  id               String   @id @default(uuid())
  userId           String   @unique // Customer-facing ID (usr-[A-Za-z0-9]+)
  name             String
  email            String   @unique
  phoneNumber      String   @unique
  password         String   // Hashed password (never store plain text)
  address          Json
  createdTimestamp DateTime @default(now())
  updatedTimestamp DateTime @updatedAt

  // Relations
  accounts BankAccount[]

  @@map("users")
}

// Bank Account entity
model BankAccount {
  id               String   @id @default(uuid())
  accountNumber    String   @unique // Customer-facing ID (01\d{6})
  sortCode         String   @default("10-10-10")
  name             String
  accountType      String   // 'personal' | 'business'
  balance          Decimal  @db.Decimal(10, 2)
  currency         String   @default("GBP")
  userId           String
  createdTimestamp DateTime @default(now())
  updatedTimestamp DateTime @updatedAt

  // Relations
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@map("bank_accounts")
}

// Transaction entity
model Transaction {
  id               String   @id @default(uuid())
  transactionId    String   @unique // Customer-facing ID (tan-[A-Za-z0-9]+)
  amount           Decimal  @db.Decimal(10, 2)
  currency         String   @default("GBP")
  type             String   // 'deposit' | 'withdrawal'
  reference        String?
  userId           String   // Customer-facing user ID
  accountNumber    String   // Customer-facing account number
  createdTimestamp DateTime @default(now())

  // Relations
  account BankAccount @relation(fields: [accountNumber], references: [accountNumber], onDelete: Cascade)

  @@map("transactions")
} 